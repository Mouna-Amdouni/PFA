<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'username', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nomComplet', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'datenaissance', '' . "\0" . 'App\\Entity\\User' . "\0" . 'numeroTel', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nationalite', '' . "\0" . 'App\\Entity\\User' . "\0" . 'valid', '' . "\0" . 'App\\Entity\\User' . "\0" . 'deleted', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'blogPosts', '' . "\0" . 'App\\Entity\\User' . "\0" . 'blogPostsCreated', '' . "\0" . 'App\\Entity\\User' . "\0" . 'admin', '' . "\0" . 'App\\Entity\\User' . "\0" . 'historiques', '' . "\0" . 'App\\Entity\\User' . "\0" . 'associations', '' . "\0" . 'App\\Entity\\User' . "\0" . 'topics', '' . "\0" . 'App\\Entity\\User' . "\0" . 'messages', '' . "\0" . 'App\\Entity\\User' . "\0" . 'logo', '' . "\0" . 'App\\Entity\\User' . "\0" . 'opportunites'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'username', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nomComplet', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'datenaissance', '' . "\0" . 'App\\Entity\\User' . "\0" . 'numeroTel', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nationalite', '' . "\0" . 'App\\Entity\\User' . "\0" . 'valid', '' . "\0" . 'App\\Entity\\User' . "\0" . 'deleted', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'blogPosts', '' . "\0" . 'App\\Entity\\User' . "\0" . 'blogPostsCreated', '' . "\0" . 'App\\Entity\\User' . "\0" . 'admin', '' . "\0" . 'App\\Entity\\User' . "\0" . 'historiques', '' . "\0" . 'App\\Entity\\User' . "\0" . 'associations', '' . "\0" . 'App\\Entity\\User' . "\0" . 'topics', '' . "\0" . 'App\\Entity\\User' . "\0" . 'messages', '' . "\0" . 'App\\Entity\\User' . "\0" . 'logo', '' . "\0" . 'App\\Entity\\User' . "\0" . 'opportunites'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomComplet(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomComplet', []);

        return parent::getNomComplet();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomComplet($nomComplet): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomComplet', [$nomComplet]);

        return parent::setNomComplet($nomComplet);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function isValid(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValid', []);

        return parent::isValid();
    }

    /**
     * {@inheritDoc}
     */
    public function setValid(bool $valid): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValid', [$valid]);

        return parent::setValid($valid);
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted(bool $deleted): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatarUrl($size)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatarUrl', [$size]);

        return parent::getAvatarUrl($size);
    }

    /**
     * {@inheritDoc}
     */
    public function getColorCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColorCode', []);

        return parent::getColorCode();
    }

    /**
     * {@inheritDoc}
     */
    public function validate(\Symfony\Component\Validator\Context\ExecutionContextInterface $context, $payload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', [$context, $payload]);

        return parent::validate($context, $payload);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlogPosts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlogPosts', []);

        return parent::getBlogPosts();
    }

    /**
     * {@inheritDoc}
     */
    public function addBlogPost(\App\Entity\BlogPost $blogPost): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlogPost', [$blogPost]);

        return parent::addBlogPost($blogPost);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlogPost(\App\Entity\BlogPost $blogPost): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlogPost', [$blogPost]);

        return parent::removeBlogPost($blogPost);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlogPostsCreated(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlogPostsCreated', []);

        return parent::getBlogPostsCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function addBlogPostsCreated(\App\Entity\BlogPost $blogPostsCreated): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlogPostsCreated', [$blogPostsCreated]);

        return parent::addBlogPostsCreated($blogPostsCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlogPostsCreated(\App\Entity\BlogPost $blogPostsCreated): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlogPostsCreated', [$blogPostsCreated]);

        return parent::removeBlogPostsCreated($blogPostsCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function isAdmin(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAdmin', []);

        return parent::isAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdmin(bool $admin): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdmin', [$admin]);

        return parent::setAdmin($admin);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroTel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroTel', []);

        return parent::getNumeroTel();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroTel($numeroTel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroTel', [$numeroTel]);

        return parent::setNumeroTel($numeroTel);
    }

    /**
     * {@inheritDoc}
     */
    public function getNationalite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNationalite', []);

        return parent::getNationalite();
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoriques(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoriques', []);

        return parent::getHistoriques();
    }

    /**
     * {@inheritDoc}
     */
    public function addHistorique(\App\Entity\Historique $historique): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHistorique', [$historique]);

        return parent::addHistorique($historique);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHistorique(\App\Entity\Historique $historique): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHistorique', [$historique]);

        return parent::removeHistorique($historique);
    }

    /**
     * {@inheritDoc}
     */
    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEqualTo', [$user]);

        return parent::isEqualTo($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssociations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssociations', []);

        return parent::getAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssociation(\App\Entity\Association $association): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssociation', [$association]);

        return parent::addAssociation($association);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssociation(\App\Entity\Association $association): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssociation', [$association]);

        return parent::removeAssociation($association);
    }

    /**
     * {@inheritDoc}
     */
    public function getTopics(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopics', []);

        return parent::getTopics();
    }

    /**
     * {@inheritDoc}
     */
    public function addTopic(\App\Entity\Topic $topic): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTopic', [$topic]);

        return parent::addTopic($topic);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTopic(\App\Entity\Topic $topic): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTopic', [$topic]);

        return parent::removeTopic($topic);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessages(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessages', []);

        return parent::getMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function addMessage(\App\Entity\Message $message): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMessage', [$message]);

        return parent::addMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMessage(\App\Entity\Message $message): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMessage', [$message]);

        return parent::removeMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', []);

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo(?string $logo): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', [$logo]);

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getOpportunites(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpportunites', []);

        return parent::getOpportunites();
    }

    /**
     * {@inheritDoc}
     */
    public function addOpportunite(\App\Entity\Opportunite $opportunite): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOpportunite', [$opportunite]);

        return parent::addOpportunite($opportunite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOpportunite(\App\Entity\Opportunite $opportunite): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOpportunite', [$opportunite]);

        return parent::removeOpportunite($opportunite);
    }

}
